-'k1#kA comparison helper.

     This object implements the comparison operators.;+#)_comparer '!+#/DeepFrozenStamp2 '%3#å!The operator `left` <=> `right`.
        
         Whether `left` and `right` have the same magnitude; to be precise,
         this method returns whether `left` â‰¤ `right` âˆ§ `right` â‰¤ `left`.#'asBigAs'";+#$left ;+#%right '  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right' #&isZero' ' ' +#$null  3#mThe operator `left` >= `right`.
        
         Whether `left` â‰¥ `right`.##geq'";+#$left ;+#%right '  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right' #+atLeastZero' ' ' +#$null  3#jThe operator `left` > `right`.
        
         Whether `left` > `right`.#+greaterThan'";+#$left ;+#%right '  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right' #)aboveZero' ' ' +#$null  3#mThe operator `left` <= `right`.
        
         Whether `left` â‰¤ `right`.##leq'";+#$left ;+#%right '  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right' #*atMostZero' ' ' +#$null  3#jThe operator `left` < `right`.
        
         Whether `left` < `right`.#(lessThan'";+#$left ;+#%right '  0;+#(__return -'".+#(__return##run'!..+#$left#'op__cmp'!+#%right' #)belowZero' ' ' +#$null  ' 1#QNothingness.

     This guard admits only `null`.;+#$Void '!+#/DeepFrozenStamp2 '"3 #(_printOn'!;+##out '  -'".+##out#%print'!*#$Void' +#$null3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'#9..+#+__equalizer#(sameEver'"+#(specimen+#$null' ##not' ' .+#%throw#%eject'"+#"ej*#(not null'  .+#(__return##run'!+#$null' +#$null  ' 1 ;+#2makePredicateGuard '!+#/DeepFrozenStamp2 '!3 ##run'";+#)predicate+#/DeepFrozenStamp;+#%label '  0;+#(__return -'#9..+#%isStr##run'!+#%label' ##not' ' .+#%throw##run'!*#DPredicate guard label must be string'  .+#(__return##run'!1#uA predicate guard.

         This guard admits any object which passes its predicate.;+#.predicateGuard '!+#/DeepFrozenStamp2 '"3 #(_printOn'!;+##out '  -'".+##out#%print'!+#%label' +#$null3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'&9.+#)predicate##run'!+#(specimen' .+#(__return##run'!+#(specimen'  /;+#)conformed  .+#(specimen#*_conformTo'!+#.predicateGuard' 9.+#)predicate##run'!+#)conformed' .+#(__return##run'!+#)conformed'  /;+#%error  ..*#.Failed guard (##add'!+#%label' ##add'!*#"):' .+#%throw#%eject'"+#"ej.+#*__makeList##run'"+#%error+#(specimen' ' +#$null  ' ' +#$null  ' /;+#$Bool  .+#2makePredicateGuard##run'"+#&isBool*#$Bool' /;+#%Bytes  .+#2makePredicateGuard##run'"+#'isBytes*#%Bytes' /;+#$Char  .+#2makePredicateGuard##run'"+#&isChar*#$Char' /;+#&Double  .+#2makePredicateGuard##run'"+#(isDouble*#&Double' /;+##Int  .+#2makePredicateGuard##run'"+#%isInt*##Int' /;+##Str  .+#2makePredicateGuard##run'"+#%isStr*##Str' /;+#%Empty  .+#2makePredicateGuard##run'"1 ;+#$pred '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(specimen '  0;+#(__return -'".+#(__return##run'!.+#+__equalizer#(sameEver'".+#(specimen#$size' ' *& ' ' +#$null  ' *#%Empty' /;+#)_mapEmpty  +#%Empty1 ;+#,testIntGuard '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+##Int+#"ej*$`4      ' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+##Int+#"ej*&t' ' +#$null' 1 ;+#.testEmptyGuard '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+#%Empty+#"ej.+#*__makeList##run'!*&.' ' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+#%Empty+#"ej.+#*__makeList##run' ' ' ' +#$null' .+#(unittest##run'!.+#*__makeList##run'"+#,testIntGuard+#.testEmptyGuard' ' 1#!Ensure that `flag` is `true`.

     This object is a safeguard against malicious loop objects. A flag is set
     to `true` and closed over by a loop body; once the loop is finished, the
     flag is set to `false` and the loop cannot be reÃ«ntered.;+#,_validateFor '!+#/DeepFrozenStamp2 '!3 ##run'!;+#$flag+#$Bool' +#$Void-'"9.+#$flag##not' ' .+#%throw##run'!*#8Failed to validate loop!'  +#$null' 1 ;+#/_ListGuardStamp '! 2 '!3 #%audit'!< '  0;+#(__return -'".+#(__return##run'!+#$true' +#$null  ' 1#ß!A guard which admits lists.

     Only immutable lists are admitted by this object. Mutable lists created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+#$List '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out '  -'".+##out#%print'!*#$List' +#$null3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'%9.+#&isList##run'!+#(specimen' .+#(__return##run'!+#(specimen'  /;+#)conformed  .+#(specimen#*_conformTo'!+#$List' 9.+#&isList##run'!+#)conformed' .+#(__return##run'!+#)conformed'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#6(Probably) not a list:+#(specimen' ' +#$null  3 ##get'!;+#(subGuard '  0;+#(__return -'".+#(__return##run'!1 ;+#'SubList '$+#/DeepFrozenStamp+#/_ListGuardStamp+#(Selfless+#0TransparentStamp2 '$3 #(_printOn'!;+##out '  -'$.+##out#%print'!*#%List[' .+#(subGuard#(_printOn'!+##out' .+##out#%print'!*#!]' +#$null3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+#$List*##get.+#*__makeList##run'!+#(subGuard' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  3 #(getGuard' '  0;+#(__return -'".+#(__return##run'!+#(subGuard' +#$null  3 #&coerce'"=+#(specimen ;+#"ej '  0;+#(__return -'$9..+#&isList##run'!+#(specimen' ##not' ' 5+#(specimen.+#(specimen#*_conformTo'!+#'SubList'  9.+#&isList##run'!+#(specimen' -'$/=+#+validFlag_1  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#%key_2 ;+#'value_3 '  -'%.+#,_validateFor##run'!+#+validFlag_1' /<  +#%key_2/;+#'element  +#'value_3.+#(subGuard#&coerce'"+#'element+#"ej' +#$null' ' 5+#+validFlag_1+#%false+#$null.+#(__return##run'!+#(specimen'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#A(Probably) not a conforming list:+#(specimen' ' +#$null  ' ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+#$List' .+#(__return##run'!+##Any' 9.+#+__auditedBy##run'"+#/_ListGuardStamp+#(specimen' .+#(__return##run'!.+#(specimen#(getGuard' ' ' .+#%throw#%eject'"+#"ej*#0Not a List guard' +#$null  ' 1 ;+#._SetGuardStamp '! 2 '!3 #%audit'!< '  0;+#(__return -'".+#(__return##run'!+#$true' +#$null  ' 1#Ü!A guard which admits sets.

     Only immutable sets are admitted by this object. Mutable sets created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+##Set '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out '  -'".+##out#%print'!*##Set' +#$null3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'%9.+#%isSet##run'!+#(specimen' .+#(__return##run'!+#(specimen'  /;+#)conformed  .+#(specimen#*_conformTo'!+##Set' 9.+#%isSet##run'!+#)conformed' .+#(__return##run'!+#)conformed'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#5(Probably) not a set:+#(specimen' ' +#$null  3 ##get'!;+#(subGuard '  0;+#(__return -'".+#(__return##run'!1 ;+#&SubSet '$ +#._SetGuardStamp+#(Selfless+#0TransparentStamp2 '$3 #(_printOn'!;+##out '  -'$.+##out#%print'!*#$Set[' .+#(subGuard#(_printOn'!+##out' .+##out#%print'!*#!]' +#$null3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+##Set*##get.+#*__makeList##run'!+#(subGuard' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  3 #(getGuard' '  0;+#(__return -'".+#(__return##run'!+#(subGuard' +#$null  3 #&coerce'"=+#(specimen ;+#"ej '  0;+#(__return -'(9..+#%isSet##run'!+#(specimen' ##not' ' 5+#(specimen.+#(specimen#*_conformTo'!+#&SubSet'  /=+##set  ..+#*__makeList##run' ' #%asSet' ' /=+#+validFlag_4  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#%key_5 ;+#'value_6 '  -'%.+#,_validateFor##run'!+#+validFlag_4' /<  +#%key_5/;+#'element  +#'value_65+##set.+##set#$with'!.+#(subGuard#&coerce'"+#'element+#"ej' ' +#$null' ' 5+#+validFlag_4+#%false+#$null.+#(__return##run'!+##set' .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#@(Probably) not a conforming set:+#(specimen' ' +#$null  ' ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+##Set' .+#(__return##run'!+##Any' 9.+#+__auditedBy##run'"+#._SetGuardStamp+#(specimen' .+#(__return##run'!.+#(specimen#(getGuard' ' ' .+#%throw#%eject'"+#"ej*#/Not a Set guard' +#$null  ' 1 ;+#._MapGuardStamp '! 2 '!3 #%audit'!< '  0;+#(__return -'".+#(__return##run'!+#$true' +#$null  ' 1#Ü!A guard which admits maps.

     Only immutable maps are admitted by this object. Mutable maps created
     with `diverge/0` will not be admitted; freeze them first with
     `snapshot/0`.;+##Map '!+#/DeepFrozenStamp2 '$3 #(_printOn'!;+##out '  -'".+##out#%print'!*##Map' +#$null3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'%9.+#%isMap##run'!+#(specimen' .+#(__return##run'!+#(specimen'  /;+#)conformed  .+#(specimen#*_conformTo'!+##Map' 9.+#%isMap##run'!+#)conformed' .+#(__return##run'!+#)conformed'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#5(Probably) not a map:+#(specimen' ' +#$null  3 ##get'";+#(keyGuard ;+#*valueGuard '  0;+#(__return -'".+#(__return##run'!1 ;+#&SubMap '$ +#._MapGuardStamp+#(Selfless+#0TransparentStamp2 '$3 #(_printOn'!;+##out '  -'&.+##out#%print'!*#$Map[' .+#(keyGuard#(_printOn'!+##out' .+##out#%print'!*#", ' .+#*valueGuard#(_printOn'!+##out' .+##out#%print'!*#!]' +#$null3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+##Map*##get.+#*__makeList##run'"+#(keyGuard+#*valueGuard' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  3 #)getGuards' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'"+#(keyGuard+#*valueGuard' ' +#$null  3 #&coerce'"=+#(specimen ;+#"ej '  0;+#(__return -'$9..+#%isMap##run'!+#(specimen' ##not' ' 5+#(specimen.+#(specimen#*_conformTo'!+#&SubMap'  9.+#%isMap##run'!+#(specimen' -'$/=+#+validFlag_7  +#$true6.+#&__loop##run'"+#(specimen1#-For-loop body< '! 2 '!3 ##run'";+#%key_8 ;+#'value_9 '  -'&.+#,_validateFor##run'!+#+validFlag_7' /;+##key  +#%key_8/;+#%value  +#'value_9.+#(keyGuard#&coerce'"+##key+#"ej' .+#*valueGuard#&coerce'"+#%value+#"ej' +#$null' ' 5+#+validFlag_7+#%false+#$null.+#(__return##run'!+#(specimen'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#@(Probably) not a conforming map:+#(specimen' ' +#$null  ' ' +#$null  3 #-extractGuards'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+##Map' .+#(__return##run'!.+#*__makeList##run'"+##Any+##Any' ' 9.+#+__auditedBy##run'"+#._MapGuardStamp+#(specimen' .+#(__return##run'!.+#(specimen#)getGuards' ' ' .+#%throw#%eject'"+#"ej*#/Not a Map guard' +#$null  ' 1 ;+#,testMapGuard '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+##Map+#"ej*&t' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+##Map+#"ej..+#*__makeList##run' ' #%asMap' ' ' ' +#$null' 1 ;+#2testMapGuardIntStr '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+##Map##get'"+##Int+##Str' +#"ej.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*##lue*&t' ' ' ' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+##Map##get'"+##Int+##Str' +#"ej.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&t*##lue' ' ' ' ' +#$null' .+#(unittest##run'!.+#*__makeList##run'"+#,testMapGuard+#2testMapGuardIntStr' ' 1 ;+#,_NullOkStamp '! 2 '!3 #%audit'!< '  0;+#(__return -'".+#(__return##run'!+#$true' +#$null  ' 1#¢!A guard which admits `null`.

     When specialized, this object returns a guard which admits its subguard
     as well as `null`.;+#&NullOk '!+#/DeepFrozenStamp2 '#3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'%9.+#+__equalizer#(sameEver'"+#(specimen+#$null' .+#(__return##run'!+#(specimen'  /;+#)conformed  .+#(specimen#*_conformTo'!+#&NullOk' 9.+#+__equalizer#(sameEver'"+#)conformed+#$null' .+#(__return##run'!+#)conformed'  .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#)Not null:+#(specimen' ' +#$null  3 ##get'!;+#(subGuard '  0;+#(__return -'".+#(__return##run'!1 ;+#)SubNullOk '$ +#,_NullOkStamp+#(Selfless+#0TransparentStamp2 '$3 #(_printOn'!;+##out '  -'$.+##out#%print'!*#'NullOk[' .+##out#%print'!+#(subGuard' .+##out#%print'!*#!]' +#$null3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+#&NullOk*##get.+#*__makeList##run'!+#(subGuard' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'#9.+#+__equalizer#(sameEver'"+#(specimen+#$null' .+#(__return##run'!+#(specimen'  .+#(__return##run'!.+#(subGuard#&coerce'"+#(specimen+#"ej' ' +#$null  3 #(getGuard' '  0;+#(__return -'".+#(__return##run'!+#(subGuard' +#$null  ' ' +#$null  3 #,extractGuard'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#(specimen+#&NullOk' .+#(__return##run'!+##Any' 9.+#+__auditedBy##run'"+#,_NullOkStamp+#(specimen' .+#(__return##run'!.+#(specimen#(getGuard' ' ' .+#%throw#%eject'"+#"ej*#2Not a NullOk guard' +#$null  ' 1 ;+#2testNullOkUnsubbed '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+#&NullOk+#"ej*&t' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x+#&NullOk+#"ej+#$null' ' +#$null' 1 ;+#-testNullOkInt '! 2 '!3 ##run'!;+#&assert '  -'$.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+#&NullOk##get'!+##Int' +#"ej*#"42' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+#&NullOk##get'!+##Int' +#"ej*&t' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+#&NullOk##get'!+##Int' +#"ej+#$null' ' +#$null' .+#(unittest##run'!.+#*__makeList##run'"+#2testNullOkUnsubbed+#-testNullOkInt' ' 1 ;+#/_SameGuardStamp '! 2 '!3 #%audit'!< '  0;+#(__return -'".+#(__return##run'!+#$true' +#$null  ' 1 ;+#$Same '!+#/DeepFrozenStamp2 '#3 #(_printOn'!;+##out '  -'".+##out#%print'!*#$Same' +#$null3 ##get'!;+#%value '  0;+#(__return -'".+#(__return##run'!1 ;+#)SameGuard '$ +#/_SameGuardStamp+#(Selfless+#0TransparentStamp2 '$3 #(_printOn'!;+##out '  -'$.+##out#%print'!*#%Same[' .+#%value#(_printOn'!+##out' .+##out#%print'!*#!]' +#$null3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+#$Same*##get.+#*__makeList##run'!+#%value' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  3 #&coerce'";+#(specimen ;+#"ej '  0;+#(__return -'#9..+#+__equalizer#'sameYet'"+#%value+#(specimen' ##not' ' .+#%throw#%eject'"+#"ej.+#*__makeList##run'#+#(specimen*#&is not+#%value' '  .+#(__return##run'!+#(specimen' +#$null  3 #(getValue' '  0;+#(__return -'".+#(__return##run'!+#%value' +#$null  ' ' +#$null  3 #,extractValue'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__auditedBy##run'"+#/_SameGuardStamp+#(specimen' .+#(__return##run'!.+#(specimen#(getValue' ' ' .+#%throw#%eject'"+#"ej*#0Not a Same guard' +#$null  ' 1 ;+#(testSame '! 2 '!3 ##run'!;+#&assert '  -'&1 ;+#!o '! 2 ' ' 1 ;+#!p '! 2 ' ' .+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+#$Same##get'!+#!o' +#"ej+#!p' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+#$Same##get'!+#!o' +#"ej+#!o' ' .+#&assert#%equal'"..+#$Same##get'!+#!o' #(getValue' ' +#!o' +#$null' .+#(unittest##run'!.+#*__makeList##run'!+#(testSame' ' 1 ;+#*_iterWhile '!+#/DeepFrozenStamp2 '!3 ##run'!;+##obj '  0;+#(__return -'".+#(__return##run'!1 ;+#)iterWhile '! 2 '"3 #-_makeIterator' '  0;+#(__return -'".+#(__return##run'!+#)iterWhile' +#$null  3 #$next'!;+#"ej '  0;+#(__return -'$/;+#"rv  .+##obj##run' ' 9.+#+__equalizer#(sameEver'"+#"rv+#%false' .+#%throw#%eject'"+#"ej*#0End of iteration'  .+#(__return##run'!.+#*__makeList##run'"+#$null+#"rv' ' +#$null  ' ' +#$null  ' 1 ;+#*_splitList '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(position+##Int'  0;+#(__return -'".+#(__return##run'!1 ;+#,listSplitter '! 2 '!3 ##run'";+#(specimen ;+#"ej '  0;+#(__return -'#9.+#)_comparer#(lessThan'".+#(specimen#$size' ' +#(position' .+#%throw#%eject'"+#"ej.+#*__makeList##run'"*#2List is too short:+#(specimen' '  .+#(__return##run'!..+#(specimen#%slice'"*& +#(position' #$with'!.+#(specimen#%slice'!+#(position' ' ' +#$null  ' ' +#$null  ' 1 ;+#/_accumulateList '!+#/DeepFrozenStamp2 '!3 ##run'";+#(iterable ;+#&mapper '  0;+#(__return -'%/;+#(iterator  .+#(iterable#-_makeIterator' ' /=+#"rv  .+#*__makeList##run' ' 0;+#"ej .+#&__loop##run'".+#*_iterWhile##run'!1 < '! 2 '!3 ##run' '  +#$true' ' 1 < '! 2 '!3 ##run'"< < ' +#$Bool-'"0;+#$skip -'#/>'";+##key ;+#%value   .+#(iterator#$next'!+#"ej' /;+#&result  .+#&mapper##run'#+##key+#%value+#$skip' 5+#"rv.+#"rv#$with'!+#&result'   +#$true' '   .+#(__return##run'!+#"rv' +#$null  ' 1#9The pattern ==`expected`.;+#*_matchSame '!+#/DeepFrozenStamp2 '!3 ##run'!;+#(expected '  0;+#(__return -'".+#(__return##run'!1 ;+#+sameMatcher '! 2 '!3 ##run'";+#(specimen ;+#"ej '  -'"9..+#+__equalizer#(sameEver'"+#(expected+#(specimen' ##not' ' .+#%throw#%eject'"+#"ej.+#*__makeList##run'#*#-Not the same:+#(expected+#(specimen' '  +#$null' ' +#$null  ' 1 ;+#+_mapExtract '!+#/DeepFrozenStamp2 '!3 ##run'!;+##key '  0;+#(__return -'".+#(__return##run'!1 ;+#,mapExtractor '! 2 '!3 ##run'";+#(specimen ;+#"ej '  0;+#(__return -'#9.+#(specimen#(contains'!+##key' .+#(__return##run'!.+#*__makeList##run'".+#(specimen##get'!+##key' .+#(specimen#'without'!+##key' ' '  .+#%throw#%eject'"+#"ej..*#$Key ##add'!.+#!M#'toQuote'!+#(specimen' ' ##add'!*#+ not in map' ' +#$null  ' ' +#$null  ' 1 ;+#-_quasiMatcher '!+#/DeepFrozenStamp2 '!3 ##run'";+#*matchMaker ;+#&values '  0;+#(__return -'".+#(__return##run'!1 ;+#,quasiMatcher '! 2 '!3 ##run'";+#(specimen ;+#"ej '  0;+#(__return -'".+#(__return##run'!.+#*matchMaker#)matchBind'#+#&values+#(specimen+#"ej' ' +#$null  ' ' +#$null  ' 1#:The pattern patt ? (expr).;+#)_suchThat '!+#/DeepFrozenStamp2 '"3 ##run'!;+#(specimen+#$Bool'  0;+#(__return -'#1 ;+#(suchThat '! 2 '!3 ##run'"< ;+#"ej '  -'"9.+#(specimen##not' ' .+#%throw#%eject'"+#"ej*#/suchThat failed'  +#$null' .+#(__return##run'!+#(suchThat' +#$null  3 ##run'";+#(specimen < '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'"+#(specimen+#$null' ' +#$null  ' 1 ;+#0testSuchThatTrue '! 2 '!3 ##run'!;+#&assert '  -'#1 ;+#!f '! 2 '!3 ##run'!;+#"ej '  -'#/?+#)_suchThat>'";+#!x ?.+#)_suchThat##run'!+#$true' <  +#"ej*&t.+#&assert#%equal'"+#!x*&t' +#$null' .+#&assert#,doesNotEject'!+#!f' +#$null' 1 ;+#1testSuchThatFalse '! 2 '!3 ##run'!;+#&assert '  -'".+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /?+#)_suchThat>'";+#!x ?.+#)_suchThat##run'!+#%false' <  +#"ej*&t' ' +#$null' .+#(unittest##run'!.+#*__makeList##run'"+#0testSuchThatTrue+#1testSuchThatFalse' ' 1 ;+#/testAnySubGuard '! 2 '!3 ##run'!;+#&assert '  -'$.+#&assert#&ejects'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+##Any##get'"+##Int+#$Char' +#"ej*#$test' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+##Any##get'"+##Int+#$Char' +#"ej*&t' ' .+#&assert#,doesNotEject'!1 < '! 2 '!3 ##run'!;+#"ej '  /;+#!x.+##Any##get'"+##Int+#$Char' +#"ej*A#!x' ' +#$null' .+#(unittest##run'!.+#*__makeList##run'!+#/testAnySubGuard' ' 1 ;+#-_switchFailed '!+#/DeepFrozenStamp2 ' '!4>'#?.+#*_matchSame##run'!*##run' < ;+#$args <  .+#%throw##run'"*#.Switch failed:+#$args' 1#<The operator `obj`.`method`.;+#._makeVerbFacet '!+#/DeepFrozenStamp2 '!3#FCurry a call to `target` using `verb`.#)curryCall'";+#&target ;+#$verb '  0;+#(__return -'".+#(__return##run'!1#¸!A curried call.

             This object responds to messages with the verb "run" by passing
             them to another object with a different verb.;+#'curried '! 2 '!3 #'_uncall' '  0;+#(__return -'".+#(__return##run'!.+#*__makeList##run'$+#._makeVerbFacet*#)curryCall.+#*__makeList##run'"+#&target+#$verb' ..+#*__makeList##run' ' #%asMap' ' ' ' +#$null  '!4>'#?.+#*_matchSame##run'!*##run' < ;+#$args ;+#)namedArgs  .+#!M#$call'$+#&target+#$verb+#$args+#)namedArgs' ' +#$null  ' 1 ;+#(_flexMap '! 2 '!3 ##run'!=+#!m '  0;+#(__return -'".+#(__return##run'!1 ;+#'flexMap '! 2 '03 #-_makeIterator' '  0;+#(__return -'".+#(__return##run'!.+#!m#-_makeIterator' ' ' +#$null  3 #(_printOn'!;+##out '  -'#.+##out#%print'!.+#!M#(toString'!+#!m' ' .+##out#%print'!*#*.diverge()' +#$null3 #%asSet' ' +##Set0;+#(__return -'".+#(__return##run'!.+#!m#%asSet' ' ' +#$null  3 #(contains'!;+#!k ' +#$Bool0;+#(__return -'".+#(__return##run'!.+#!m#(contains'!+#!k' ' +#$null  3 #'diverge' '  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!+#!m' ' +#$null  3 #%fetch'";+#!k ;+#%thunk '  0;+#(__return -'".+#(__return##run'!.+#!m#%fetch'"+#!k+#%thunk' ' +#$null  3 ##get'!;+#!k '  0;+#(__return -'".+#(__return##run'!.+#!m##get'!+#!k' ' +#$null  3 #"or'!;+#%other '  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!.+#!m#"or'!+#%other' ' ' +#$null  3 ##put'";+#!k ;+#!v '  -'"5+#!m.+#!m#$with'"+#!k+#!v' +#$null3 #)removeKey'!;+#!k '  -'"5+#!m.+#!m#'without'!+#!k' +#$null3 #$size' '  0;+#(__return -'".+#(__return##run'!.+#!m#$size' ' ' +#$null  3 #%slice'!;+#%start '  0;+#(__return -'".+#(__return##run'!.+#'flexMap#%slice'"+#%start.+#'flexMap#$size' ' ' ' +#$null  3 #%slice'";+#%start ;+#$stop '  0;+#(__return -'".+#(__return##run'!.+#(_flexMap##run'!.+#!m#%slice'"+#%start+#$stop' ' ' +#$null  3 #(snapshot' '  0;+#(__return -'".+#(__return##run'!+#!m' +#$null  3 #(sortKeys' '  0;+#(__return -'".+#(__return##run'!.+#!m#(sortKeys' ' ' +#$null  3 #*sortValues' '  0;+#(__return -'".+#(__return##run'!.+#!m#*sortValues' ' ' +#$null  ' ' +#$null  ' 1 ;+#3testFlexMapPrinting '! 2 '!3 ##run'!;+#&assert '  -'#.+#&assert#%equal'".+#!M#(toString'!.+#(_flexMap##run'!..+#*__makeList##run' ' #%asMap' ' ' ' *#4[].asMap().diverge()' .+#&assert#%equal'".+#!M#(toString'!.+#(_flexMap##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&**&t' ' ' ' ' *#3[5 => 42].diverge()' +#$null' 1 ;+#4testFlexMapRemoveKey '! 2 '!3 ##run'!;+#&assert '  -'$/;+#!m  .+#(_flexMap##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*&"*&$' ' ' ' .+#!m#)removeKey'!*&"' .+#&assert#%equal'".+#!m#(contains'!*&"' +#%false' +#$null' .+#(unittest##run'!.+#*__makeList##run'"+#3testFlexMapPrinting+#4testFlexMapRemoveKey' ' 1 ;+#(_makeMap '!+#/DeepFrozenStamp2 '!3 #)fromPairs'!;+#!l '  0;+#(__return -'&/;+#!m  .+#(_flexMap##run'!..+#*__makeList##run' ' #%asMap' ' ' /=+#,validFlag_10  +#$true6.+#&__loop##run'"+#!l1#-For-loop body< '! 2 '!3 ##run'";+#&key_11 ;+#(value_12 '  -'&.+#,_validateFor##run'!+#,validFlag_10' /<  +#&key_11/>'";+#!k ;+#!v   +#(value_12.+#!m##put'"+#!k/;+#'ares_13  +#!v' +#'ares_13+#$null' ' 5+#,validFlag_10+#%false+#$null.+#(__return##run'!.+#!m#(snapshot' ' ' +#$null  ' 1 ;+#._accumulateMap '!+#/DeepFrozenStamp2 '!3 ##run'";+#(iterable ;+#&mapper '  0;+#(__return -'#/;+#!l  .+#/_accumulateList##run'"+#(iterable+#&mapper' .+#(__return##run'!.+#(_makeMap#)fromPairs'!+#!l' ' +#$null  ' 1 ;+#%_bind '!+#/DeepFrozenStamp2 '!3 ##run'";+#(resolver ;+#%guard '  0;+#(__return -'#1 ;+#)viaBinder '! 2 '!3 ##run'";+#(specimen ;+#"ej '  0;+#(__return -'"9.+#+__equalizer#(sameEver'"+#%guard+#$null' -'".+#(resolver#'resolve'!+#(specimen' .+#(__return##run'!+#(specimen' -'#/;+#'coerced  .+#%guard#&coerce'"+#(specimen+#"ej' .+#(resolver#'resolve'!+#'coerced' .+#(__return##run'!+#'coerced' +#$null  ' .+#(__return##run'!+#)viaBinder' +#$null  ' 1 ;+#,_booleanFlow '!+#/DeepFrozenStamp2 '"3 #&broken' '  0;+#(__return -'".+#(__return##run'!.+##Ref#&broken'!*#>Boolean flow expression failed' ' +#$null  3 #+failureList'!;+#%count+##Int' +#$List0;+#(__return -'".+#(__return##run'!..+#*__makeList##run'!+#%false' ##add'!..+#*__makeList##run'!.+#,_booleanFlow#&broken' ' ' #(multiply'!+#%count' ' ' +#$null  ' 1#HMake a slot that lazily binds its value.;+#,makeLazySlot '!+#/DeepFrozenStamp2 '!3 ##run'!=+#%thunk '!B*#%guard;+#%guard +##Any 0;+#(__return -'#/=+#)evaluated+#$Bool +#%false.+#(__return##run'!1#TA slot that possibly has not yet computed its value.;+#(lazySlot '!+#/DeepFrozenStamp2 '!3 ##get' ' +#%guard0;+#(__return -'#9.+#)evaluated##not' ' -'"5+#)evaluated+#$true5+#%thunk.+#%thunk##run' '  .+#(__return##run'!+#%thunk' +#$null  ' ' +#$null  ' /?.+#+_mapExtract##run'!*#-SubrangeGuard' >'";+#-SubrangeGuard ?.+#+_mapExtract##run'!*#*DeepFrozen' >'";+#*DeepFrozen <+#)_mapEmpty   .+#&import#&script'"*#2prelude/deepfrozen.+#)__makeMap#)fromPairs'!.+#*__makeList##run'2.+#*__makeList##run'"*#+&&_comparer,+#)_comparer' .+#*__makeList##run'"*#.&&_booleanFlow,+#,_booleanFlow' .+#*__makeList##run'"*#0&&_makeVerbFacet,+#._makeVerbFacet' .+#*__makeList##run'"*#.&&_validateFor,+#,_validateFor' .+#*__makeList##run'"*#'&&_bind,+#%_bind' .+#*__makeList##run'"*#1&&DeepFrozenStamp,+#/DeepFrozenStamp' .+#*__makeList##run'"*#2&&TransparentStamp,+#0TransparentStamp' .+#*__makeList##run'"*#&&&Bool,+#$Bool' .+#*__makeList##run'"*#&&&Char,+#$Char' .+#*__makeList##run'"*#(&&Double,+#&Double' .+#*__makeList##run'"*#%&&Int,+##Int' .+#*__makeList##run'"*#%&&Str,+##Str' .+#*__makeList##run'"*#&&&Void,+#$Void' .+#*__makeList##run'"*#&&&List,+#$List' .+#*__makeList##run'"*#%&&Map,+##Map' .+#*__makeList##run'"*#(&&NullOk,+#&NullOk' .+#*__makeList##run'"*#&&&Same,+#$Same' .+#*__makeList##run'"*#%&&Set,+##Set' ' ' ' 1 ;+#)scopeAsDF '! 2 '!3 ##run'!;+#%scope '  0;+#(__return -'".+#(__return##run'!-'"/=+#,validFlag_14  +#$true6.+#._accumulateMap##run'"+#%scope1#-For-loop body< '! 2 '!3 ##run'#;+#&key_15 ;+#(value_16 < '  -'$.+#,_validateFor##run'!+#,validFlag_14' /;+#!k  +#&key_15/;+#!v  +#(value_16.+#*__makeList##run'".*#"&&##add'!+#!k' -'"/;+#"v0+#*DeepFrozen +#!v,+#"v0' ' ' 5+#,validFlag_14+#%false' +#$null  ' /=+#,preludeScope  .+#)scopeAsDF##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'].+#*__makeList##run'"*##Any+##Any' .+#*__makeList##run'"*#$Bool+#$Bool' .+#*__makeList##run'"*#%Bytes+#%Bytes' .+#*__makeList##run'"*#$Char+#$Char' .+#*__makeList##run'"*#*DeepFrozen+#*DeepFrozen' .+#*__makeList##run'"*#&Double+#&Double' .+#*__makeList##run'"*#%Empty+#%Empty' .+#*__makeList##run'"*##Int+##Int' .+#*__makeList##run'"*#$List+#$List' .+#*__makeList##run'"*##Map+##Map' .+#*__makeList##run'"*#&NullOk+#&NullOk' .+#*__makeList##run'"*##Ref+##Ref' .+#*__makeList##run'"*#$Near+#$Near' .+#*__makeList##run'"*#$Same+#$Same' .+#*__makeList##run'"*##Set+##Set' .+#*__makeList##run'"*#(Selfless+#(Selfless' .+#*__makeList##run'"*##Str+##Str' .+#*__makeList##run'"*#-SubrangeGuard+#-SubrangeGuard' .+#*__makeList##run'"*#$Void+#$Void' .+#*__makeList##run'"*#$null+#$null' .+#*__makeList##run'"*#(Infinity+#(Infinity' .+#*__makeList##run'"*##NaN+##NaN' .+#*__makeList##run'"*#%false+#%false' .+#*__makeList##run'"*#$true+#$true' .+#*__makeList##run'"*#+__auditedBy+#+__auditedBy' .+#*__makeList##run'"*#+__equalizer+#+__equalizer' .+#*__makeList##run'"*#&__loop+#&__loop' .+#*__makeList##run'"*#*__makeList+#*__makeList' .+#*__makeList##run'"*#)__makeMap+#)__makeMap' .+#*__makeList##run'"*#)__makeInt+#)__makeInt' .+#*__makeList##run'"*#,__makeDouble+#,__makeDouble' .+#*__makeList##run'"*#0__makeSourceSpan+#0__makeSourceSpan' .+#*__makeList##run'"*#,__makeString+#,__makeString' .+#*__makeList##run'"*#/__slotToBinding+#/__slotToBinding' .+#*__makeList##run'"*#*_makeBytes+#*_makeBytes' .+#*__makeList##run'"*#._makeFinalSlot+#._makeFinalSlot' .+#*__makeList##run'"*#,_makeVarSlot+#,_makeVarSlot' .+#*__makeList##run'"*#$help+#$help' .+#*__makeList##run'"*#%throw+#%throw' .+#*__makeList##run'"*#%trace+#%trace' .+#*__makeList##run'"*#'traceln+#'traceln' .+#*__makeList##run'"*#)_mapEmpty+#)_mapEmpty' .+#*__makeList##run'"*#+_mapExtract+#+_mapExtract' .+#*__makeList##run'"*#/_accumulateList+#/_accumulateList' .+#*__makeList##run'"*#._accumulateMap+#._accumulateMap' .+#*__makeList##run'"*#,_booleanFlow+#,_booleanFlow' .+#*__makeList##run'"*#*_iterWhile+#*_iterWhile' .+#*__makeList##run'"*#,_validateFor+#,_validateFor' .+#*__makeList##run'"*#-_switchFailed+#-_switchFailed' .+#*__makeList##run'"*#._makeVerbFacet+#._makeVerbFacet' .+#*__makeList##run'"*#)_comparer+#)_comparer' .+#*__makeList##run'"*#)_suchThat+#)_suchThat' .+#*__makeList##run'"*#*_matchSame+#*_matchSame' .+#*__makeList##run'"*#%_bind+#%_bind' .+#*__makeList##run'"*#-_quasiMatcher+#-_quasiMatcher' .+#*__makeList##run'"*#*_splitList+#*_splitList' .+#*__makeList##run'"*#!M+#!M' .+#*__makeList##run'"*#&import+#&import' .+#*__makeList##run'"*#%throw+#%throw' .+#*__makeList##run'"*#*typhonEval+#*typhonEval' .+#*__makeList##run'"*#,makeLazySlot+#,makeLazySlot' ' ' ' 1 ;+#/importIntoScope '! 2 '!3 ##run'";+#$name ;+#+moduleScope '  -'"5+#,preludeScope.+#,preludeScope#"or'!.+#)scopeAsDF##run'!.+#&import#&script'"+#$name+#+moduleScope' ' ' +#$null' .+#/importIntoScope##run'"*#1prelude/monte_ast.+#,preludeScope#"or'!.+#)scopeAsDF##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'#.+#*__makeList##run'"*#/DeepFrozenStamp+#/DeepFrozenStamp' .+#*__makeList##run'"*#0TransparentStamp+#0TransparentStamp' .+#*__makeList##run'"*#.KernelAstStamp+#.KernelAstStamp' ' ' ' ' ' .+#/importIntoScope##run'"*#.prelude/simple+#,preludeScope' .+#/importIntoScope##run'"*#-prelude/brand+#,preludeScope' .+#/importIntoScope##run'"*#4prelude/protocolDesc.+#,preludeScope#"or'!.+#)scopeAsDF##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*#0TransparentStamp+#0TransparentStamp' ' ' ' ' ' /?.+#+_mapExtract##run'!*#2OrderedRegionMaker' >'";+#2OrderedRegionMaker ?.+#+_mapExtract##run'!*#1OrderedSpaceMaker' >'";+#1OrderedSpaceMaker <+#)_mapEmpty   .+#&import#&script'"*#.prelude/region+#,preludeScope' 5+#,preludeScope..+#)scopeAsDF##run'!.+#&import#&script'"*#-prelude/space.+#,preludeScope#"or'!.+#)scopeAsDF##run'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'".+#*__makeList##run'"*#2OrderedRegionMaker+#2OrderedRegionMaker' .+#*__makeList##run'"*#1OrderedSpaceMaker+#1OrderedSpaceMaker' ' ' ' ' ' ' #"or'!+#,preludeScope' .+#/importIntoScope##run'"*#)prelude/b+#,preludeScope' />'";+#0preludeScope0_18 ;+#1preludeScope0R_19   .+##Ref#'promise' ' /;+#(value_20  /;+#-preludeScope0  .+#,preludeScope#"or'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*#+&&safeScope,+#0preludeScope0_18' ' ' ' .+#1preludeScope0R_19#'resolve'!+#-preludeScope0' +#(value_20.+#/importIntoScope##run'"*#)prelude/m+#-preludeScope0' .+#/importIntoScope##run'"*#3prelude/transparent+#,preludeScope' 5+#,preludeScope..+#)scopeAsDF##run'!.+#&import#&script'"*#6prelude/coreInterfaces+#,preludeScope' ' #"or'!+#,preludeScope' .+#,preludeScope#"or'!.+#)__makeMap#)fromPairs'!.+#*__makeList##run'!.+#*__makeList##run'"*#*&&_flexMap,+#(_flexMap' ' ' ' 