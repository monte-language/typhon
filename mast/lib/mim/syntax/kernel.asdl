expr = LiteralExpr(df value)
     | NounExpr(str name)
     | SlotExpr(expr noun)
     | BindingExpr(expr noun)
     | SeqExpr(expr* exprs)
     | MethodCallExpr(expr receiver, str verb, expr* args, namedArg*
                      namedArgs)
     | DefExpr(pattern pattern, expr? exit, expr expr)
     | ObjectExpr(str? docstring, pattern name, expr? asExpr,
                  expr* auditors, script script)
     | CatchExpr(expr body, pattern pattern, expr catcher)
     | FinallyExpr(expr body, expr unwinder)
     | EscapeExpr(pattern ejectorPattern, expr body,
                  pattern? catchPattern, expr? catchBody)
     | IfExpr(expr test, expr then, expr? else)
     | HideExpr(expr body)
     attributes (df span)
pattern = IgnorePattern(expr? guard)
        | FinalPattern(str noun, expr? guard)
        | VarPattern(str noun, expr? guard)
        | BindingPattern(str noun)
        | ListPattern(pattern* patterns, pattern? tail)
        | ViaPattern(expr expr, pattern pattern)
        attributes (df span)
namedArg = NamedArg(expr key, expr value)
         attributes (df span)
namedParam = NamedParam(expr key, pattern value, expr? default)
           | NamedParamImport(pattern value, expr? default)
           attributes (df span)
method = Method(str? docstring, str verb, pattern* params,
                namedParam* namedParams, expr? resultGuard, expr body)
       attributes (df span)
matcher = Matcher(pattern pattern, expr body)
catcher = Catcher(pattern pattern, expr body)
script = Script(expr? extends, method* methods, matcher* matchers)
       attributes (df span)
